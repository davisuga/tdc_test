
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `VehicleAssessment` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model VehicleAssessment
 * 
 */
export type VehicleAssessmentModel = runtime.Types.Result.DefaultSelection<Prisma.$VehicleAssessmentPayload>

export type AggregateVehicleAssessment = {
  _count: VehicleAssessmentCountAggregateOutputType | null
  _avg: VehicleAssessmentAvgAggregateOutputType | null
  _sum: VehicleAssessmentSumAggregateOutputType | null
  _min: VehicleAssessmentMinAggregateOutputType | null
  _max: VehicleAssessmentMaxAggregateOutputType | null
}

export type VehicleAssessmentAvgAggregateOutputType = {
  visualScore: number | null
  maxScore: number | null
  aiConfidence: number | null
}

export type VehicleAssessmentSumAggregateOutputType = {
  visualScore: number | null
  maxScore: number | null
  aiConfidence: number | null
}

export type VehicleAssessmentMinAggregateOutputType = {
  id: string | null
  vehicleDetailsId: string | null
  visualScore: number | null
  maxScore: number | null
  scoreDescription: string | null
  marketValueRange: string | null
  tradeInValue: string | null
  tradeInDescription: string | null
  aiConfidence: number | null
  aiConfidenceDescription: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type VehicleAssessmentMaxAggregateOutputType = {
  id: string | null
  vehicleDetailsId: string | null
  visualScore: number | null
  maxScore: number | null
  scoreDescription: string | null
  marketValueRange: string | null
  tradeInValue: string | null
  tradeInDescription: string | null
  aiConfidence: number | null
  aiConfidenceDescription: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type VehicleAssessmentCountAggregateOutputType = {
  id: number
  vehicleDetailsId: number
  visualScore: number
  maxScore: number
  scoreDescription: number
  marketValueRange: number
  tradeInValue: number
  tradeInDescription: number
  aiConfidence: number
  aiConfidenceDescription: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type VehicleAssessmentAvgAggregateInputType = {
  visualScore?: true
  maxScore?: true
  aiConfidence?: true
}

export type VehicleAssessmentSumAggregateInputType = {
  visualScore?: true
  maxScore?: true
  aiConfidence?: true
}

export type VehicleAssessmentMinAggregateInputType = {
  id?: true
  vehicleDetailsId?: true
  visualScore?: true
  maxScore?: true
  scoreDescription?: true
  marketValueRange?: true
  tradeInValue?: true
  tradeInDescription?: true
  aiConfidence?: true
  aiConfidenceDescription?: true
  createdAt?: true
  updatedAt?: true
}

export type VehicleAssessmentMaxAggregateInputType = {
  id?: true
  vehicleDetailsId?: true
  visualScore?: true
  maxScore?: true
  scoreDescription?: true
  marketValueRange?: true
  tradeInValue?: true
  tradeInDescription?: true
  aiConfidence?: true
  aiConfidenceDescription?: true
  createdAt?: true
  updatedAt?: true
}

export type VehicleAssessmentCountAggregateInputType = {
  id?: true
  vehicleDetailsId?: true
  visualScore?: true
  maxScore?: true
  scoreDescription?: true
  marketValueRange?: true
  tradeInValue?: true
  tradeInDescription?: true
  aiConfidence?: true
  aiConfidenceDescription?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type VehicleAssessmentAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which VehicleAssessment to aggregate.
   */
  where?: Prisma.VehicleAssessmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VehicleAssessments to fetch.
   */
  orderBy?: Prisma.VehicleAssessmentOrderByWithRelationInput | Prisma.VehicleAssessmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.VehicleAssessmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VehicleAssessments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VehicleAssessments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned VehicleAssessments
  **/
  _count?: true | VehicleAssessmentCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: VehicleAssessmentAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: VehicleAssessmentSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: VehicleAssessmentMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: VehicleAssessmentMaxAggregateInputType
}

export type GetVehicleAssessmentAggregateType<T extends VehicleAssessmentAggregateArgs> = {
      [P in keyof T & keyof AggregateVehicleAssessment]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateVehicleAssessment[P]>
    : Prisma.GetScalarType<T[P], AggregateVehicleAssessment[P]>
}




export type VehicleAssessmentGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.VehicleAssessmentWhereInput
  orderBy?: Prisma.VehicleAssessmentOrderByWithAggregationInput | Prisma.VehicleAssessmentOrderByWithAggregationInput[]
  by: Prisma.VehicleAssessmentScalarFieldEnum[] | Prisma.VehicleAssessmentScalarFieldEnum
  having?: Prisma.VehicleAssessmentScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: VehicleAssessmentCountAggregateInputType | true
  _avg?: VehicleAssessmentAvgAggregateInputType
  _sum?: VehicleAssessmentSumAggregateInputType
  _min?: VehicleAssessmentMinAggregateInputType
  _max?: VehicleAssessmentMaxAggregateInputType
}

export type VehicleAssessmentGroupByOutputType = {
  id: string
  vehicleDetailsId: string
  visualScore: number
  maxScore: number
  scoreDescription: string
  marketValueRange: string
  tradeInValue: string
  tradeInDescription: string
  aiConfidence: number
  aiConfidenceDescription: string
  createdAt: Date
  updatedAt: Date
  _count: VehicleAssessmentCountAggregateOutputType | null
  _avg: VehicleAssessmentAvgAggregateOutputType | null
  _sum: VehicleAssessmentSumAggregateOutputType | null
  _min: VehicleAssessmentMinAggregateOutputType | null
  _max: VehicleAssessmentMaxAggregateOutputType | null
}

type GetVehicleAssessmentGroupByPayload<T extends VehicleAssessmentGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<VehicleAssessmentGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof VehicleAssessmentGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], VehicleAssessmentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], VehicleAssessmentGroupByOutputType[P]>
      }
    >
  >



export type VehicleAssessmentWhereInput = {
  AND?: Prisma.VehicleAssessmentWhereInput | Prisma.VehicleAssessmentWhereInput[]
  OR?: Prisma.VehicleAssessmentWhereInput[]
  NOT?: Prisma.VehicleAssessmentWhereInput | Prisma.VehicleAssessmentWhereInput[]
  id?: Prisma.StringFilter<"VehicleAssessment"> | string
  vehicleDetailsId?: Prisma.StringFilter<"VehicleAssessment"> | string
  visualScore?: Prisma.IntFilter<"VehicleAssessment"> | number
  maxScore?: Prisma.IntFilter<"VehicleAssessment"> | number
  scoreDescription?: Prisma.StringFilter<"VehicleAssessment"> | string
  marketValueRange?: Prisma.StringFilter<"VehicleAssessment"> | string
  tradeInValue?: Prisma.StringFilter<"VehicleAssessment"> | string
  tradeInDescription?: Prisma.StringFilter<"VehicleAssessment"> | string
  aiConfidence?: Prisma.IntFilter<"VehicleAssessment"> | number
  aiConfidenceDescription?: Prisma.StringFilter<"VehicleAssessment"> | string
  createdAt?: Prisma.DateTimeFilter<"VehicleAssessment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"VehicleAssessment"> | Date | string
  vehicleDetails?: Prisma.XOR<Prisma.VehicleDetailsScalarRelationFilter, Prisma.VehicleDetailsWhereInput>
  conditionIssues?: Prisma.ConditionIssueListRelationFilter
}

export type VehicleAssessmentOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  vehicleDetailsId?: Prisma.SortOrder
  visualScore?: Prisma.SortOrder
  maxScore?: Prisma.SortOrder
  scoreDescription?: Prisma.SortOrder
  marketValueRange?: Prisma.SortOrder
  tradeInValue?: Prisma.SortOrder
  tradeInDescription?: Prisma.SortOrder
  aiConfidence?: Prisma.SortOrder
  aiConfidenceDescription?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  vehicleDetails?: Prisma.VehicleDetailsOrderByWithRelationInput
  conditionIssues?: Prisma.ConditionIssueOrderByRelationAggregateInput
}

export type VehicleAssessmentWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.VehicleAssessmentWhereInput | Prisma.VehicleAssessmentWhereInput[]
  OR?: Prisma.VehicleAssessmentWhereInput[]
  NOT?: Prisma.VehicleAssessmentWhereInput | Prisma.VehicleAssessmentWhereInput[]
  vehicleDetailsId?: Prisma.StringFilter<"VehicleAssessment"> | string
  visualScore?: Prisma.IntFilter<"VehicleAssessment"> | number
  maxScore?: Prisma.IntFilter<"VehicleAssessment"> | number
  scoreDescription?: Prisma.StringFilter<"VehicleAssessment"> | string
  marketValueRange?: Prisma.StringFilter<"VehicleAssessment"> | string
  tradeInValue?: Prisma.StringFilter<"VehicleAssessment"> | string
  tradeInDescription?: Prisma.StringFilter<"VehicleAssessment"> | string
  aiConfidence?: Prisma.IntFilter<"VehicleAssessment"> | number
  aiConfidenceDescription?: Prisma.StringFilter<"VehicleAssessment"> | string
  createdAt?: Prisma.DateTimeFilter<"VehicleAssessment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"VehicleAssessment"> | Date | string
  vehicleDetails?: Prisma.XOR<Prisma.VehicleDetailsScalarRelationFilter, Prisma.VehicleDetailsWhereInput>
  conditionIssues?: Prisma.ConditionIssueListRelationFilter
}, "id">

export type VehicleAssessmentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  vehicleDetailsId?: Prisma.SortOrder
  visualScore?: Prisma.SortOrder
  maxScore?: Prisma.SortOrder
  scoreDescription?: Prisma.SortOrder
  marketValueRange?: Prisma.SortOrder
  tradeInValue?: Prisma.SortOrder
  tradeInDescription?: Prisma.SortOrder
  aiConfidence?: Prisma.SortOrder
  aiConfidenceDescription?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.VehicleAssessmentCountOrderByAggregateInput
  _avg?: Prisma.VehicleAssessmentAvgOrderByAggregateInput
  _max?: Prisma.VehicleAssessmentMaxOrderByAggregateInput
  _min?: Prisma.VehicleAssessmentMinOrderByAggregateInput
  _sum?: Prisma.VehicleAssessmentSumOrderByAggregateInput
}

export type VehicleAssessmentScalarWhereWithAggregatesInput = {
  AND?: Prisma.VehicleAssessmentScalarWhereWithAggregatesInput | Prisma.VehicleAssessmentScalarWhereWithAggregatesInput[]
  OR?: Prisma.VehicleAssessmentScalarWhereWithAggregatesInput[]
  NOT?: Prisma.VehicleAssessmentScalarWhereWithAggregatesInput | Prisma.VehicleAssessmentScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"VehicleAssessment"> | string
  vehicleDetailsId?: Prisma.StringWithAggregatesFilter<"VehicleAssessment"> | string
  visualScore?: Prisma.IntWithAggregatesFilter<"VehicleAssessment"> | number
  maxScore?: Prisma.IntWithAggregatesFilter<"VehicleAssessment"> | number
  scoreDescription?: Prisma.StringWithAggregatesFilter<"VehicleAssessment"> | string
  marketValueRange?: Prisma.StringWithAggregatesFilter<"VehicleAssessment"> | string
  tradeInValue?: Prisma.StringWithAggregatesFilter<"VehicleAssessment"> | string
  tradeInDescription?: Prisma.StringWithAggregatesFilter<"VehicleAssessment"> | string
  aiConfidence?: Prisma.IntWithAggregatesFilter<"VehicleAssessment"> | number
  aiConfidenceDescription?: Prisma.StringWithAggregatesFilter<"VehicleAssessment"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"VehicleAssessment"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"VehicleAssessment"> | Date | string
}

export type VehicleAssessmentCreateInput = {
  id?: string
  visualScore: number
  maxScore: number
  scoreDescription: string
  marketValueRange: string
  tradeInValue: string
  tradeInDescription: string
  aiConfidence: number
  aiConfidenceDescription: string
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleDetails: Prisma.VehicleDetailsCreateNestedOneWithoutVehicleAssessmentInput
  conditionIssues?: Prisma.ConditionIssueCreateNestedManyWithoutVehicleAssessmentInput
}

export type VehicleAssessmentUncheckedCreateInput = {
  id?: string
  vehicleDetailsId: string
  visualScore: number
  maxScore: number
  scoreDescription: string
  marketValueRange: string
  tradeInValue: string
  tradeInDescription: string
  aiConfidence: number
  aiConfidenceDescription: string
  createdAt?: Date | string
  updatedAt?: Date | string
  conditionIssues?: Prisma.ConditionIssueUncheckedCreateNestedManyWithoutVehicleAssessmentInput
}

export type VehicleAssessmentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  visualScore?: Prisma.IntFieldUpdateOperationsInput | number
  maxScore?: Prisma.IntFieldUpdateOperationsInput | number
  scoreDescription?: Prisma.StringFieldUpdateOperationsInput | string
  marketValueRange?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInValue?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInDescription?: Prisma.StringFieldUpdateOperationsInput | string
  aiConfidence?: Prisma.IntFieldUpdateOperationsInput | number
  aiConfidenceDescription?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleDetails?: Prisma.VehicleDetailsUpdateOneRequiredWithoutVehicleAssessmentNestedInput
  conditionIssues?: Prisma.ConditionIssueUpdateManyWithoutVehicleAssessmentNestedInput
}

export type VehicleAssessmentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  vehicleDetailsId?: Prisma.StringFieldUpdateOperationsInput | string
  visualScore?: Prisma.IntFieldUpdateOperationsInput | number
  maxScore?: Prisma.IntFieldUpdateOperationsInput | number
  scoreDescription?: Prisma.StringFieldUpdateOperationsInput | string
  marketValueRange?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInValue?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInDescription?: Prisma.StringFieldUpdateOperationsInput | string
  aiConfidence?: Prisma.IntFieldUpdateOperationsInput | number
  aiConfidenceDescription?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  conditionIssues?: Prisma.ConditionIssueUncheckedUpdateManyWithoutVehicleAssessmentNestedInput
}

export type VehicleAssessmentCreateManyInput = {
  id?: string
  vehicleDetailsId: string
  visualScore: number
  maxScore: number
  scoreDescription: string
  marketValueRange: string
  tradeInValue: string
  tradeInDescription: string
  aiConfidence: number
  aiConfidenceDescription: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type VehicleAssessmentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  visualScore?: Prisma.IntFieldUpdateOperationsInput | number
  maxScore?: Prisma.IntFieldUpdateOperationsInput | number
  scoreDescription?: Prisma.StringFieldUpdateOperationsInput | string
  marketValueRange?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInValue?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInDescription?: Prisma.StringFieldUpdateOperationsInput | string
  aiConfidence?: Prisma.IntFieldUpdateOperationsInput | number
  aiConfidenceDescription?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type VehicleAssessmentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  vehicleDetailsId?: Prisma.StringFieldUpdateOperationsInput | string
  visualScore?: Prisma.IntFieldUpdateOperationsInput | number
  maxScore?: Prisma.IntFieldUpdateOperationsInput | number
  scoreDescription?: Prisma.StringFieldUpdateOperationsInput | string
  marketValueRange?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInValue?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInDescription?: Prisma.StringFieldUpdateOperationsInput | string
  aiConfidence?: Prisma.IntFieldUpdateOperationsInput | number
  aiConfidenceDescription?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type VehicleAssessmentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  vehicleDetailsId?: Prisma.SortOrder
  visualScore?: Prisma.SortOrder
  maxScore?: Prisma.SortOrder
  scoreDescription?: Prisma.SortOrder
  marketValueRange?: Prisma.SortOrder
  tradeInValue?: Prisma.SortOrder
  tradeInDescription?: Prisma.SortOrder
  aiConfidence?: Prisma.SortOrder
  aiConfidenceDescription?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type VehicleAssessmentAvgOrderByAggregateInput = {
  visualScore?: Prisma.SortOrder
  maxScore?: Prisma.SortOrder
  aiConfidence?: Prisma.SortOrder
}

export type VehicleAssessmentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  vehicleDetailsId?: Prisma.SortOrder
  visualScore?: Prisma.SortOrder
  maxScore?: Prisma.SortOrder
  scoreDescription?: Prisma.SortOrder
  marketValueRange?: Prisma.SortOrder
  tradeInValue?: Prisma.SortOrder
  tradeInDescription?: Prisma.SortOrder
  aiConfidence?: Prisma.SortOrder
  aiConfidenceDescription?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type VehicleAssessmentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  vehicleDetailsId?: Prisma.SortOrder
  visualScore?: Prisma.SortOrder
  maxScore?: Prisma.SortOrder
  scoreDescription?: Prisma.SortOrder
  marketValueRange?: Prisma.SortOrder
  tradeInValue?: Prisma.SortOrder
  tradeInDescription?: Prisma.SortOrder
  aiConfidence?: Prisma.SortOrder
  aiConfidenceDescription?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type VehicleAssessmentSumOrderByAggregateInput = {
  visualScore?: Prisma.SortOrder
  maxScore?: Prisma.SortOrder
  aiConfidence?: Prisma.SortOrder
}

export type VehicleAssessmentListRelationFilter = {
  every?: Prisma.VehicleAssessmentWhereInput
  some?: Prisma.VehicleAssessmentWhereInput
  none?: Prisma.VehicleAssessmentWhereInput
}

export type VehicleAssessmentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type VehicleAssessmentScalarRelationFilter = {
  is?: Prisma.VehicleAssessmentWhereInput
  isNot?: Prisma.VehicleAssessmentWhereInput
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type VehicleAssessmentCreateNestedManyWithoutVehicleDetailsInput = {
  create?: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput, Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput> | Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput[] | Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput[]
  connectOrCreate?: Prisma.VehicleAssessmentCreateOrConnectWithoutVehicleDetailsInput | Prisma.VehicleAssessmentCreateOrConnectWithoutVehicleDetailsInput[]
  createMany?: Prisma.VehicleAssessmentCreateManyVehicleDetailsInputEnvelope
  connect?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
}

export type VehicleAssessmentUncheckedCreateNestedManyWithoutVehicleDetailsInput = {
  create?: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput, Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput> | Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput[] | Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput[]
  connectOrCreate?: Prisma.VehicleAssessmentCreateOrConnectWithoutVehicleDetailsInput | Prisma.VehicleAssessmentCreateOrConnectWithoutVehicleDetailsInput[]
  createMany?: Prisma.VehicleAssessmentCreateManyVehicleDetailsInputEnvelope
  connect?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
}

export type VehicleAssessmentUpdateManyWithoutVehicleDetailsNestedInput = {
  create?: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput, Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput> | Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput[] | Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput[]
  connectOrCreate?: Prisma.VehicleAssessmentCreateOrConnectWithoutVehicleDetailsInput | Prisma.VehicleAssessmentCreateOrConnectWithoutVehicleDetailsInput[]
  upsert?: Prisma.VehicleAssessmentUpsertWithWhereUniqueWithoutVehicleDetailsInput | Prisma.VehicleAssessmentUpsertWithWhereUniqueWithoutVehicleDetailsInput[]
  createMany?: Prisma.VehicleAssessmentCreateManyVehicleDetailsInputEnvelope
  set?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
  disconnect?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
  delete?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
  connect?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
  update?: Prisma.VehicleAssessmentUpdateWithWhereUniqueWithoutVehicleDetailsInput | Prisma.VehicleAssessmentUpdateWithWhereUniqueWithoutVehicleDetailsInput[]
  updateMany?: Prisma.VehicleAssessmentUpdateManyWithWhereWithoutVehicleDetailsInput | Prisma.VehicleAssessmentUpdateManyWithWhereWithoutVehicleDetailsInput[]
  deleteMany?: Prisma.VehicleAssessmentScalarWhereInput | Prisma.VehicleAssessmentScalarWhereInput[]
}

export type VehicleAssessmentUncheckedUpdateManyWithoutVehicleDetailsNestedInput = {
  create?: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput, Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput> | Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput[] | Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput[]
  connectOrCreate?: Prisma.VehicleAssessmentCreateOrConnectWithoutVehicleDetailsInput | Prisma.VehicleAssessmentCreateOrConnectWithoutVehicleDetailsInput[]
  upsert?: Prisma.VehicleAssessmentUpsertWithWhereUniqueWithoutVehicleDetailsInput | Prisma.VehicleAssessmentUpsertWithWhereUniqueWithoutVehicleDetailsInput[]
  createMany?: Prisma.VehicleAssessmentCreateManyVehicleDetailsInputEnvelope
  set?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
  disconnect?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
  delete?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
  connect?: Prisma.VehicleAssessmentWhereUniqueInput | Prisma.VehicleAssessmentWhereUniqueInput[]
  update?: Prisma.VehicleAssessmentUpdateWithWhereUniqueWithoutVehicleDetailsInput | Prisma.VehicleAssessmentUpdateWithWhereUniqueWithoutVehicleDetailsInput[]
  updateMany?: Prisma.VehicleAssessmentUpdateManyWithWhereWithoutVehicleDetailsInput | Prisma.VehicleAssessmentUpdateManyWithWhereWithoutVehicleDetailsInput[]
  deleteMany?: Prisma.VehicleAssessmentScalarWhereInput | Prisma.VehicleAssessmentScalarWhereInput[]
}

export type VehicleAssessmentCreateNestedOneWithoutConditionIssuesInput = {
  create?: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutConditionIssuesInput, Prisma.VehicleAssessmentUncheckedCreateWithoutConditionIssuesInput>
  connectOrCreate?: Prisma.VehicleAssessmentCreateOrConnectWithoutConditionIssuesInput
  connect?: Prisma.VehicleAssessmentWhereUniqueInput
}

export type VehicleAssessmentUpdateOneRequiredWithoutConditionIssuesNestedInput = {
  create?: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutConditionIssuesInput, Prisma.VehicleAssessmentUncheckedCreateWithoutConditionIssuesInput>
  connectOrCreate?: Prisma.VehicleAssessmentCreateOrConnectWithoutConditionIssuesInput
  upsert?: Prisma.VehicleAssessmentUpsertWithoutConditionIssuesInput
  connect?: Prisma.VehicleAssessmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.VehicleAssessmentUpdateToOneWithWhereWithoutConditionIssuesInput, Prisma.VehicleAssessmentUpdateWithoutConditionIssuesInput>, Prisma.VehicleAssessmentUncheckedUpdateWithoutConditionIssuesInput>
}

export type VehicleAssessmentCreateWithoutVehicleDetailsInput = {
  id?: string
  visualScore: number
  maxScore: number
  scoreDescription: string
  marketValueRange: string
  tradeInValue: string
  tradeInDescription: string
  aiConfidence: number
  aiConfidenceDescription: string
  createdAt?: Date | string
  updatedAt?: Date | string
  conditionIssues?: Prisma.ConditionIssueCreateNestedManyWithoutVehicleAssessmentInput
}

export type VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput = {
  id?: string
  visualScore: number
  maxScore: number
  scoreDescription: string
  marketValueRange: string
  tradeInValue: string
  tradeInDescription: string
  aiConfidence: number
  aiConfidenceDescription: string
  createdAt?: Date | string
  updatedAt?: Date | string
  conditionIssues?: Prisma.ConditionIssueUncheckedCreateNestedManyWithoutVehicleAssessmentInput
}

export type VehicleAssessmentCreateOrConnectWithoutVehicleDetailsInput = {
  where: Prisma.VehicleAssessmentWhereUniqueInput
  create: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput, Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput>
}

export type VehicleAssessmentCreateManyVehicleDetailsInputEnvelope = {
  data: Prisma.VehicleAssessmentCreateManyVehicleDetailsInput | Prisma.VehicleAssessmentCreateManyVehicleDetailsInput[]
  skipDuplicates?: boolean
}

export type VehicleAssessmentUpsertWithWhereUniqueWithoutVehicleDetailsInput = {
  where: Prisma.VehicleAssessmentWhereUniqueInput
  update: Prisma.XOR<Prisma.VehicleAssessmentUpdateWithoutVehicleDetailsInput, Prisma.VehicleAssessmentUncheckedUpdateWithoutVehicleDetailsInput>
  create: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutVehicleDetailsInput, Prisma.VehicleAssessmentUncheckedCreateWithoutVehicleDetailsInput>
}

export type VehicleAssessmentUpdateWithWhereUniqueWithoutVehicleDetailsInput = {
  where: Prisma.VehicleAssessmentWhereUniqueInput
  data: Prisma.XOR<Prisma.VehicleAssessmentUpdateWithoutVehicleDetailsInput, Prisma.VehicleAssessmentUncheckedUpdateWithoutVehicleDetailsInput>
}

export type VehicleAssessmentUpdateManyWithWhereWithoutVehicleDetailsInput = {
  where: Prisma.VehicleAssessmentScalarWhereInput
  data: Prisma.XOR<Prisma.VehicleAssessmentUpdateManyMutationInput, Prisma.VehicleAssessmentUncheckedUpdateManyWithoutVehicleDetailsInput>
}

export type VehicleAssessmentScalarWhereInput = {
  AND?: Prisma.VehicleAssessmentScalarWhereInput | Prisma.VehicleAssessmentScalarWhereInput[]
  OR?: Prisma.VehicleAssessmentScalarWhereInput[]
  NOT?: Prisma.VehicleAssessmentScalarWhereInput | Prisma.VehicleAssessmentScalarWhereInput[]
  id?: Prisma.StringFilter<"VehicleAssessment"> | string
  vehicleDetailsId?: Prisma.StringFilter<"VehicleAssessment"> | string
  visualScore?: Prisma.IntFilter<"VehicleAssessment"> | number
  maxScore?: Prisma.IntFilter<"VehicleAssessment"> | number
  scoreDescription?: Prisma.StringFilter<"VehicleAssessment"> | string
  marketValueRange?: Prisma.StringFilter<"VehicleAssessment"> | string
  tradeInValue?: Prisma.StringFilter<"VehicleAssessment"> | string
  tradeInDescription?: Prisma.StringFilter<"VehicleAssessment"> | string
  aiConfidence?: Prisma.IntFilter<"VehicleAssessment"> | number
  aiConfidenceDescription?: Prisma.StringFilter<"VehicleAssessment"> | string
  createdAt?: Prisma.DateTimeFilter<"VehicleAssessment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"VehicleAssessment"> | Date | string
}

export type VehicleAssessmentCreateWithoutConditionIssuesInput = {
  id?: string
  visualScore: number
  maxScore: number
  scoreDescription: string
  marketValueRange: string
  tradeInValue: string
  tradeInDescription: string
  aiConfidence: number
  aiConfidenceDescription: string
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleDetails: Prisma.VehicleDetailsCreateNestedOneWithoutVehicleAssessmentInput
}

export type VehicleAssessmentUncheckedCreateWithoutConditionIssuesInput = {
  id?: string
  vehicleDetailsId: string
  visualScore: number
  maxScore: number
  scoreDescription: string
  marketValueRange: string
  tradeInValue: string
  tradeInDescription: string
  aiConfidence: number
  aiConfidenceDescription: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type VehicleAssessmentCreateOrConnectWithoutConditionIssuesInput = {
  where: Prisma.VehicleAssessmentWhereUniqueInput
  create: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutConditionIssuesInput, Prisma.VehicleAssessmentUncheckedCreateWithoutConditionIssuesInput>
}

export type VehicleAssessmentUpsertWithoutConditionIssuesInput = {
  update: Prisma.XOR<Prisma.VehicleAssessmentUpdateWithoutConditionIssuesInput, Prisma.VehicleAssessmentUncheckedUpdateWithoutConditionIssuesInput>
  create: Prisma.XOR<Prisma.VehicleAssessmentCreateWithoutConditionIssuesInput, Prisma.VehicleAssessmentUncheckedCreateWithoutConditionIssuesInput>
  where?: Prisma.VehicleAssessmentWhereInput
}

export type VehicleAssessmentUpdateToOneWithWhereWithoutConditionIssuesInput = {
  where?: Prisma.VehicleAssessmentWhereInput
  data: Prisma.XOR<Prisma.VehicleAssessmentUpdateWithoutConditionIssuesInput, Prisma.VehicleAssessmentUncheckedUpdateWithoutConditionIssuesInput>
}

export type VehicleAssessmentUpdateWithoutConditionIssuesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  visualScore?: Prisma.IntFieldUpdateOperationsInput | number
  maxScore?: Prisma.IntFieldUpdateOperationsInput | number
  scoreDescription?: Prisma.StringFieldUpdateOperationsInput | string
  marketValueRange?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInValue?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInDescription?: Prisma.StringFieldUpdateOperationsInput | string
  aiConfidence?: Prisma.IntFieldUpdateOperationsInput | number
  aiConfidenceDescription?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleDetails?: Prisma.VehicleDetailsUpdateOneRequiredWithoutVehicleAssessmentNestedInput
}

export type VehicleAssessmentUncheckedUpdateWithoutConditionIssuesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  vehicleDetailsId?: Prisma.StringFieldUpdateOperationsInput | string
  visualScore?: Prisma.IntFieldUpdateOperationsInput | number
  maxScore?: Prisma.IntFieldUpdateOperationsInput | number
  scoreDescription?: Prisma.StringFieldUpdateOperationsInput | string
  marketValueRange?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInValue?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInDescription?: Prisma.StringFieldUpdateOperationsInput | string
  aiConfidence?: Prisma.IntFieldUpdateOperationsInput | number
  aiConfidenceDescription?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type VehicleAssessmentCreateManyVehicleDetailsInput = {
  id?: string
  visualScore: number
  maxScore: number
  scoreDescription: string
  marketValueRange: string
  tradeInValue: string
  tradeInDescription: string
  aiConfidence: number
  aiConfidenceDescription: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type VehicleAssessmentUpdateWithoutVehicleDetailsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  visualScore?: Prisma.IntFieldUpdateOperationsInput | number
  maxScore?: Prisma.IntFieldUpdateOperationsInput | number
  scoreDescription?: Prisma.StringFieldUpdateOperationsInput | string
  marketValueRange?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInValue?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInDescription?: Prisma.StringFieldUpdateOperationsInput | string
  aiConfidence?: Prisma.IntFieldUpdateOperationsInput | number
  aiConfidenceDescription?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  conditionIssues?: Prisma.ConditionIssueUpdateManyWithoutVehicleAssessmentNestedInput
}

export type VehicleAssessmentUncheckedUpdateWithoutVehicleDetailsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  visualScore?: Prisma.IntFieldUpdateOperationsInput | number
  maxScore?: Prisma.IntFieldUpdateOperationsInput | number
  scoreDescription?: Prisma.StringFieldUpdateOperationsInput | string
  marketValueRange?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInValue?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInDescription?: Prisma.StringFieldUpdateOperationsInput | string
  aiConfidence?: Prisma.IntFieldUpdateOperationsInput | number
  aiConfidenceDescription?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  conditionIssues?: Prisma.ConditionIssueUncheckedUpdateManyWithoutVehicleAssessmentNestedInput
}

export type VehicleAssessmentUncheckedUpdateManyWithoutVehicleDetailsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  visualScore?: Prisma.IntFieldUpdateOperationsInput | number
  maxScore?: Prisma.IntFieldUpdateOperationsInput | number
  scoreDescription?: Prisma.StringFieldUpdateOperationsInput | string
  marketValueRange?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInValue?: Prisma.StringFieldUpdateOperationsInput | string
  tradeInDescription?: Prisma.StringFieldUpdateOperationsInput | string
  aiConfidence?: Prisma.IntFieldUpdateOperationsInput | number
  aiConfidenceDescription?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type VehicleAssessmentCountOutputType
 */

export type VehicleAssessmentCountOutputType = {
  conditionIssues: number
}

export type VehicleAssessmentCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  conditionIssues?: boolean | VehicleAssessmentCountOutputTypeCountConditionIssuesArgs
}

/**
 * VehicleAssessmentCountOutputType without action
 */
export type VehicleAssessmentCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessmentCountOutputType
   */
  select?: Prisma.VehicleAssessmentCountOutputTypeSelect<ExtArgs> | null
}

/**
 * VehicleAssessmentCountOutputType without action
 */
export type VehicleAssessmentCountOutputTypeCountConditionIssuesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ConditionIssueWhereInput
}


export type VehicleAssessmentSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  vehicleDetailsId?: boolean
  visualScore?: boolean
  maxScore?: boolean
  scoreDescription?: boolean
  marketValueRange?: boolean
  tradeInValue?: boolean
  tradeInDescription?: boolean
  aiConfidence?: boolean
  aiConfidenceDescription?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  vehicleDetails?: boolean | Prisma.VehicleDetailsDefaultArgs<ExtArgs>
  conditionIssues?: boolean | Prisma.VehicleAssessment$conditionIssuesArgs<ExtArgs>
  _count?: boolean | Prisma.VehicleAssessmentCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["vehicleAssessment"]>

export type VehicleAssessmentSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  vehicleDetailsId?: boolean
  visualScore?: boolean
  maxScore?: boolean
  scoreDescription?: boolean
  marketValueRange?: boolean
  tradeInValue?: boolean
  tradeInDescription?: boolean
  aiConfidence?: boolean
  aiConfidenceDescription?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  vehicleDetails?: boolean | Prisma.VehicleDetailsDefaultArgs<ExtArgs>
}, ExtArgs["result"]["vehicleAssessment"]>

export type VehicleAssessmentSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  vehicleDetailsId?: boolean
  visualScore?: boolean
  maxScore?: boolean
  scoreDescription?: boolean
  marketValueRange?: boolean
  tradeInValue?: boolean
  tradeInDescription?: boolean
  aiConfidence?: boolean
  aiConfidenceDescription?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  vehicleDetails?: boolean | Prisma.VehicleDetailsDefaultArgs<ExtArgs>
}, ExtArgs["result"]["vehicleAssessment"]>

export type VehicleAssessmentSelectScalar = {
  id?: boolean
  vehicleDetailsId?: boolean
  visualScore?: boolean
  maxScore?: boolean
  scoreDescription?: boolean
  marketValueRange?: boolean
  tradeInValue?: boolean
  tradeInDescription?: boolean
  aiConfidence?: boolean
  aiConfidenceDescription?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type VehicleAssessmentOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "vehicleDetailsId" | "visualScore" | "maxScore" | "scoreDescription" | "marketValueRange" | "tradeInValue" | "tradeInDescription" | "aiConfidence" | "aiConfidenceDescription" | "createdAt" | "updatedAt", ExtArgs["result"]["vehicleAssessment"]>
export type VehicleAssessmentInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehicleDetails?: boolean | Prisma.VehicleDetailsDefaultArgs<ExtArgs>
  conditionIssues?: boolean | Prisma.VehicleAssessment$conditionIssuesArgs<ExtArgs>
  _count?: boolean | Prisma.VehicleAssessmentCountOutputTypeDefaultArgs<ExtArgs>
}
export type VehicleAssessmentIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehicleDetails?: boolean | Prisma.VehicleDetailsDefaultArgs<ExtArgs>
}
export type VehicleAssessmentIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehicleDetails?: boolean | Prisma.VehicleDetailsDefaultArgs<ExtArgs>
}

export type $VehicleAssessmentPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "VehicleAssessment"
  objects: {
    vehicleDetails: Prisma.$VehicleDetailsPayload<ExtArgs>
    conditionIssues: Prisma.$ConditionIssuePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    vehicleDetailsId: string
    visualScore: number
    maxScore: number
    scoreDescription: string
    marketValueRange: string
    tradeInValue: string
    tradeInDescription: string
    aiConfidence: number
    aiConfidenceDescription: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["vehicleAssessment"]>
  composites: {}
}

export type VehicleAssessmentGetPayload<S extends boolean | null | undefined | VehicleAssessmentDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload, S>

export type VehicleAssessmentCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<VehicleAssessmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: VehicleAssessmentCountAggregateInputType | true
  }

export interface VehicleAssessmentDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VehicleAssessment'], meta: { name: 'VehicleAssessment' } }
  /**
   * Find zero or one VehicleAssessment that matches the filter.
   * @param {VehicleAssessmentFindUniqueArgs} args - Arguments to find a VehicleAssessment
   * @example
   * // Get one VehicleAssessment
   * const vehicleAssessment = await prisma.vehicleAssessment.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends VehicleAssessmentFindUniqueArgs>(args: Prisma.SelectSubset<T, VehicleAssessmentFindUniqueArgs<ExtArgs>>): Prisma.Prisma__VehicleAssessmentClient<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one VehicleAssessment that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {VehicleAssessmentFindUniqueOrThrowArgs} args - Arguments to find a VehicleAssessment
   * @example
   * // Get one VehicleAssessment
   * const vehicleAssessment = await prisma.vehicleAssessment.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends VehicleAssessmentFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, VehicleAssessmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__VehicleAssessmentClient<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first VehicleAssessment that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleAssessmentFindFirstArgs} args - Arguments to find a VehicleAssessment
   * @example
   * // Get one VehicleAssessment
   * const vehicleAssessment = await prisma.vehicleAssessment.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends VehicleAssessmentFindFirstArgs>(args?: Prisma.SelectSubset<T, VehicleAssessmentFindFirstArgs<ExtArgs>>): Prisma.Prisma__VehicleAssessmentClient<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first VehicleAssessment that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleAssessmentFindFirstOrThrowArgs} args - Arguments to find a VehicleAssessment
   * @example
   * // Get one VehicleAssessment
   * const vehicleAssessment = await prisma.vehicleAssessment.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends VehicleAssessmentFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, VehicleAssessmentFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__VehicleAssessmentClient<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more VehicleAssessments that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleAssessmentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all VehicleAssessments
   * const vehicleAssessments = await prisma.vehicleAssessment.findMany()
   * 
   * // Get first 10 VehicleAssessments
   * const vehicleAssessments = await prisma.vehicleAssessment.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const vehicleAssessmentWithIdOnly = await prisma.vehicleAssessment.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends VehicleAssessmentFindManyArgs>(args?: Prisma.SelectSubset<T, VehicleAssessmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a VehicleAssessment.
   * @param {VehicleAssessmentCreateArgs} args - Arguments to create a VehicleAssessment.
   * @example
   * // Create one VehicleAssessment
   * const VehicleAssessment = await prisma.vehicleAssessment.create({
   *   data: {
   *     // ... data to create a VehicleAssessment
   *   }
   * })
   * 
   */
  create<T extends VehicleAssessmentCreateArgs>(args: Prisma.SelectSubset<T, VehicleAssessmentCreateArgs<ExtArgs>>): Prisma.Prisma__VehicleAssessmentClient<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many VehicleAssessments.
   * @param {VehicleAssessmentCreateManyArgs} args - Arguments to create many VehicleAssessments.
   * @example
   * // Create many VehicleAssessments
   * const vehicleAssessment = await prisma.vehicleAssessment.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends VehicleAssessmentCreateManyArgs>(args?: Prisma.SelectSubset<T, VehicleAssessmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many VehicleAssessments and returns the data saved in the database.
   * @param {VehicleAssessmentCreateManyAndReturnArgs} args - Arguments to create many VehicleAssessments.
   * @example
   * // Create many VehicleAssessments
   * const vehicleAssessment = await prisma.vehicleAssessment.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many VehicleAssessments and only return the `id`
   * const vehicleAssessmentWithIdOnly = await prisma.vehicleAssessment.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends VehicleAssessmentCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, VehicleAssessmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a VehicleAssessment.
   * @param {VehicleAssessmentDeleteArgs} args - Arguments to delete one VehicleAssessment.
   * @example
   * // Delete one VehicleAssessment
   * const VehicleAssessment = await prisma.vehicleAssessment.delete({
   *   where: {
   *     // ... filter to delete one VehicleAssessment
   *   }
   * })
   * 
   */
  delete<T extends VehicleAssessmentDeleteArgs>(args: Prisma.SelectSubset<T, VehicleAssessmentDeleteArgs<ExtArgs>>): Prisma.Prisma__VehicleAssessmentClient<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one VehicleAssessment.
   * @param {VehicleAssessmentUpdateArgs} args - Arguments to update one VehicleAssessment.
   * @example
   * // Update one VehicleAssessment
   * const vehicleAssessment = await prisma.vehicleAssessment.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends VehicleAssessmentUpdateArgs>(args: Prisma.SelectSubset<T, VehicleAssessmentUpdateArgs<ExtArgs>>): Prisma.Prisma__VehicleAssessmentClient<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more VehicleAssessments.
   * @param {VehicleAssessmentDeleteManyArgs} args - Arguments to filter VehicleAssessments to delete.
   * @example
   * // Delete a few VehicleAssessments
   * const { count } = await prisma.vehicleAssessment.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends VehicleAssessmentDeleteManyArgs>(args?: Prisma.SelectSubset<T, VehicleAssessmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more VehicleAssessments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleAssessmentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many VehicleAssessments
   * const vehicleAssessment = await prisma.vehicleAssessment.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends VehicleAssessmentUpdateManyArgs>(args: Prisma.SelectSubset<T, VehicleAssessmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more VehicleAssessments and returns the data updated in the database.
   * @param {VehicleAssessmentUpdateManyAndReturnArgs} args - Arguments to update many VehicleAssessments.
   * @example
   * // Update many VehicleAssessments
   * const vehicleAssessment = await prisma.vehicleAssessment.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more VehicleAssessments and only return the `id`
   * const vehicleAssessmentWithIdOnly = await prisma.vehicleAssessment.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends VehicleAssessmentUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, VehicleAssessmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one VehicleAssessment.
   * @param {VehicleAssessmentUpsertArgs} args - Arguments to update or create a VehicleAssessment.
   * @example
   * // Update or create a VehicleAssessment
   * const vehicleAssessment = await prisma.vehicleAssessment.upsert({
   *   create: {
   *     // ... data to create a VehicleAssessment
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the VehicleAssessment we want to update
   *   }
   * })
   */
  upsert<T extends VehicleAssessmentUpsertArgs>(args: Prisma.SelectSubset<T, VehicleAssessmentUpsertArgs<ExtArgs>>): Prisma.Prisma__VehicleAssessmentClient<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of VehicleAssessments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleAssessmentCountArgs} args - Arguments to filter VehicleAssessments to count.
   * @example
   * // Count the number of VehicleAssessments
   * const count = await prisma.vehicleAssessment.count({
   *   where: {
   *     // ... the filter for the VehicleAssessments we want to count
   *   }
   * })
  **/
  count<T extends VehicleAssessmentCountArgs>(
    args?: Prisma.Subset<T, VehicleAssessmentCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], VehicleAssessmentCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a VehicleAssessment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleAssessmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends VehicleAssessmentAggregateArgs>(args: Prisma.Subset<T, VehicleAssessmentAggregateArgs>): Prisma.PrismaPromise<GetVehicleAssessmentAggregateType<T>>

  /**
   * Group by VehicleAssessment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleAssessmentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends VehicleAssessmentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: VehicleAssessmentGroupByArgs['orderBy'] }
      : { orderBy?: VehicleAssessmentGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, VehicleAssessmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehicleAssessmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the VehicleAssessment model
 */
readonly fields: VehicleAssessmentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for VehicleAssessment.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__VehicleAssessmentClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  vehicleDetails<T extends Prisma.VehicleDetailsDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.VehicleDetailsDefaultArgs<ExtArgs>>): Prisma.Prisma__VehicleDetailsClient<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  conditionIssues<T extends Prisma.VehicleAssessment$conditionIssuesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.VehicleAssessment$conditionIssuesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ConditionIssuePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the VehicleAssessment model
 */
export interface VehicleAssessmentFieldRefs {
  readonly id: Prisma.FieldRef<"VehicleAssessment", 'String'>
  readonly vehicleDetailsId: Prisma.FieldRef<"VehicleAssessment", 'String'>
  readonly visualScore: Prisma.FieldRef<"VehicleAssessment", 'Int'>
  readonly maxScore: Prisma.FieldRef<"VehicleAssessment", 'Int'>
  readonly scoreDescription: Prisma.FieldRef<"VehicleAssessment", 'String'>
  readonly marketValueRange: Prisma.FieldRef<"VehicleAssessment", 'String'>
  readonly tradeInValue: Prisma.FieldRef<"VehicleAssessment", 'String'>
  readonly tradeInDescription: Prisma.FieldRef<"VehicleAssessment", 'String'>
  readonly aiConfidence: Prisma.FieldRef<"VehicleAssessment", 'Int'>
  readonly aiConfidenceDescription: Prisma.FieldRef<"VehicleAssessment", 'String'>
  readonly createdAt: Prisma.FieldRef<"VehicleAssessment", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"VehicleAssessment", 'DateTime'>
}
    

// Custom InputTypes
/**
 * VehicleAssessment findUnique
 */
export type VehicleAssessmentFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  /**
   * Filter, which VehicleAssessment to fetch.
   */
  where: Prisma.VehicleAssessmentWhereUniqueInput
}

/**
 * VehicleAssessment findUniqueOrThrow
 */
export type VehicleAssessmentFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  /**
   * Filter, which VehicleAssessment to fetch.
   */
  where: Prisma.VehicleAssessmentWhereUniqueInput
}

/**
 * VehicleAssessment findFirst
 */
export type VehicleAssessmentFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  /**
   * Filter, which VehicleAssessment to fetch.
   */
  where?: Prisma.VehicleAssessmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VehicleAssessments to fetch.
   */
  orderBy?: Prisma.VehicleAssessmentOrderByWithRelationInput | Prisma.VehicleAssessmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for VehicleAssessments.
   */
  cursor?: Prisma.VehicleAssessmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VehicleAssessments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VehicleAssessments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of VehicleAssessments.
   */
  distinct?: Prisma.VehicleAssessmentScalarFieldEnum | Prisma.VehicleAssessmentScalarFieldEnum[]
}

/**
 * VehicleAssessment findFirstOrThrow
 */
export type VehicleAssessmentFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  /**
   * Filter, which VehicleAssessment to fetch.
   */
  where?: Prisma.VehicleAssessmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VehicleAssessments to fetch.
   */
  orderBy?: Prisma.VehicleAssessmentOrderByWithRelationInput | Prisma.VehicleAssessmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for VehicleAssessments.
   */
  cursor?: Prisma.VehicleAssessmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VehicleAssessments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VehicleAssessments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of VehicleAssessments.
   */
  distinct?: Prisma.VehicleAssessmentScalarFieldEnum | Prisma.VehicleAssessmentScalarFieldEnum[]
}

/**
 * VehicleAssessment findMany
 */
export type VehicleAssessmentFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  /**
   * Filter, which VehicleAssessments to fetch.
   */
  where?: Prisma.VehicleAssessmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VehicleAssessments to fetch.
   */
  orderBy?: Prisma.VehicleAssessmentOrderByWithRelationInput | Prisma.VehicleAssessmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing VehicleAssessments.
   */
  cursor?: Prisma.VehicleAssessmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VehicleAssessments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VehicleAssessments.
   */
  skip?: number
  distinct?: Prisma.VehicleAssessmentScalarFieldEnum | Prisma.VehicleAssessmentScalarFieldEnum[]
}

/**
 * VehicleAssessment create
 */
export type VehicleAssessmentCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  /**
   * The data needed to create a VehicleAssessment.
   */
  data: Prisma.XOR<Prisma.VehicleAssessmentCreateInput, Prisma.VehicleAssessmentUncheckedCreateInput>
}

/**
 * VehicleAssessment createMany
 */
export type VehicleAssessmentCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many VehicleAssessments.
   */
  data: Prisma.VehicleAssessmentCreateManyInput | Prisma.VehicleAssessmentCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * VehicleAssessment createManyAndReturn
 */
export type VehicleAssessmentCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * The data used to create many VehicleAssessments.
   */
  data: Prisma.VehicleAssessmentCreateManyInput | Prisma.VehicleAssessmentCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * VehicleAssessment update
 */
export type VehicleAssessmentUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  /**
   * The data needed to update a VehicleAssessment.
   */
  data: Prisma.XOR<Prisma.VehicleAssessmentUpdateInput, Prisma.VehicleAssessmentUncheckedUpdateInput>
  /**
   * Choose, which VehicleAssessment to update.
   */
  where: Prisma.VehicleAssessmentWhereUniqueInput
}

/**
 * VehicleAssessment updateMany
 */
export type VehicleAssessmentUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update VehicleAssessments.
   */
  data: Prisma.XOR<Prisma.VehicleAssessmentUpdateManyMutationInput, Prisma.VehicleAssessmentUncheckedUpdateManyInput>
  /**
   * Filter which VehicleAssessments to update
   */
  where?: Prisma.VehicleAssessmentWhereInput
  /**
   * Limit how many VehicleAssessments to update.
   */
  limit?: number
}

/**
 * VehicleAssessment updateManyAndReturn
 */
export type VehicleAssessmentUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * The data used to update VehicleAssessments.
   */
  data: Prisma.XOR<Prisma.VehicleAssessmentUpdateManyMutationInput, Prisma.VehicleAssessmentUncheckedUpdateManyInput>
  /**
   * Filter which VehicleAssessments to update
   */
  where?: Prisma.VehicleAssessmentWhereInput
  /**
   * Limit how many VehicleAssessments to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * VehicleAssessment upsert
 */
export type VehicleAssessmentUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  /**
   * The filter to search for the VehicleAssessment to update in case it exists.
   */
  where: Prisma.VehicleAssessmentWhereUniqueInput
  /**
   * In case the VehicleAssessment found by the `where` argument doesn't exist, create a new VehicleAssessment with this data.
   */
  create: Prisma.XOR<Prisma.VehicleAssessmentCreateInput, Prisma.VehicleAssessmentUncheckedCreateInput>
  /**
   * In case the VehicleAssessment was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.VehicleAssessmentUpdateInput, Prisma.VehicleAssessmentUncheckedUpdateInput>
}

/**
 * VehicleAssessment delete
 */
export type VehicleAssessmentDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  /**
   * Filter which VehicleAssessment to delete.
   */
  where: Prisma.VehicleAssessmentWhereUniqueInput
}

/**
 * VehicleAssessment deleteMany
 */
export type VehicleAssessmentDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which VehicleAssessments to delete
   */
  where?: Prisma.VehicleAssessmentWhereInput
  /**
   * Limit how many VehicleAssessments to delete.
   */
  limit?: number
}

/**
 * VehicleAssessment.conditionIssues
 */
export type VehicleAssessment$conditionIssuesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ConditionIssue
   */
  select?: Prisma.ConditionIssueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ConditionIssue
   */
  omit?: Prisma.ConditionIssueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConditionIssueInclude<ExtArgs> | null
  where?: Prisma.ConditionIssueWhereInput
  orderBy?: Prisma.ConditionIssueOrderByWithRelationInput | Prisma.ConditionIssueOrderByWithRelationInput[]
  cursor?: Prisma.ConditionIssueWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ConditionIssueScalarFieldEnum | Prisma.ConditionIssueScalarFieldEnum[]
}

/**
 * VehicleAssessment without action
 */
export type VehicleAssessmentDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
}
