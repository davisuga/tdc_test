
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `VehicleDetails` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model VehicleDetails
 * 
 */
export type VehicleDetailsModel = runtime.Types.Result.DefaultSelection<Prisma.$VehicleDetailsPayload>

export type AggregateVehicleDetails = {
  _count: VehicleDetailsCountAggregateOutputType | null
  _avg: VehicleDetailsAvgAggregateOutputType | null
  _sum: VehicleDetailsSumAggregateOutputType | null
  _min: VehicleDetailsMinAggregateOutputType | null
  _max: VehicleDetailsMaxAggregateOutputType | null
}

export type VehicleDetailsAvgAggregateOutputType = {
  year: number | null
}

export type VehicleDetailsSumAggregateOutputType = {
  year: number | null
}

export type VehicleDetailsMinAggregateOutputType = {
  id: string | null
  make: string | null
  model: string | null
  year: number | null
  mileage: string | null
  vin: string | null
}

export type VehicleDetailsMaxAggregateOutputType = {
  id: string | null
  make: string | null
  model: string | null
  year: number | null
  mileage: string | null
  vin: string | null
}

export type VehicleDetailsCountAggregateOutputType = {
  id: number
  make: number
  model: number
  year: number
  mileage: number
  vin: number
  _all: number
}


export type VehicleDetailsAvgAggregateInputType = {
  year?: true
}

export type VehicleDetailsSumAggregateInputType = {
  year?: true
}

export type VehicleDetailsMinAggregateInputType = {
  id?: true
  make?: true
  model?: true
  year?: true
  mileage?: true
  vin?: true
}

export type VehicleDetailsMaxAggregateInputType = {
  id?: true
  make?: true
  model?: true
  year?: true
  mileage?: true
  vin?: true
}

export type VehicleDetailsCountAggregateInputType = {
  id?: true
  make?: true
  model?: true
  year?: true
  mileage?: true
  vin?: true
  _all?: true
}

export type VehicleDetailsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which VehicleDetails to aggregate.
   */
  where?: Prisma.VehicleDetailsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VehicleDetails to fetch.
   */
  orderBy?: Prisma.VehicleDetailsOrderByWithRelationInput | Prisma.VehicleDetailsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.VehicleDetailsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VehicleDetails from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VehicleDetails.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned VehicleDetails
  **/
  _count?: true | VehicleDetailsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: VehicleDetailsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: VehicleDetailsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: VehicleDetailsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: VehicleDetailsMaxAggregateInputType
}

export type GetVehicleDetailsAggregateType<T extends VehicleDetailsAggregateArgs> = {
      [P in keyof T & keyof AggregateVehicleDetails]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateVehicleDetails[P]>
    : Prisma.GetScalarType<T[P], AggregateVehicleDetails[P]>
}




export type VehicleDetailsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.VehicleDetailsWhereInput
  orderBy?: Prisma.VehicleDetailsOrderByWithAggregationInput | Prisma.VehicleDetailsOrderByWithAggregationInput[]
  by: Prisma.VehicleDetailsScalarFieldEnum[] | Prisma.VehicleDetailsScalarFieldEnum
  having?: Prisma.VehicleDetailsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: VehicleDetailsCountAggregateInputType | true
  _avg?: VehicleDetailsAvgAggregateInputType
  _sum?: VehicleDetailsSumAggregateInputType
  _min?: VehicleDetailsMinAggregateInputType
  _max?: VehicleDetailsMaxAggregateInputType
}

export type VehicleDetailsGroupByOutputType = {
  id: string
  make: string
  model: string
  year: number
  mileage: string
  vin: string
  _count: VehicleDetailsCountAggregateOutputType | null
  _avg: VehicleDetailsAvgAggregateOutputType | null
  _sum: VehicleDetailsSumAggregateOutputType | null
  _min: VehicleDetailsMinAggregateOutputType | null
  _max: VehicleDetailsMaxAggregateOutputType | null
}

type GetVehicleDetailsGroupByPayload<T extends VehicleDetailsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<VehicleDetailsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof VehicleDetailsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], VehicleDetailsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], VehicleDetailsGroupByOutputType[P]>
      }
    >
  >



export type VehicleDetailsWhereInput = {
  AND?: Prisma.VehicleDetailsWhereInput | Prisma.VehicleDetailsWhereInput[]
  OR?: Prisma.VehicleDetailsWhereInput[]
  NOT?: Prisma.VehicleDetailsWhereInput | Prisma.VehicleDetailsWhereInput[]
  id?: Prisma.StringFilter<"VehicleDetails"> | string
  make?: Prisma.StringFilter<"VehicleDetails"> | string
  model?: Prisma.StringFilter<"VehicleDetails"> | string
  year?: Prisma.IntFilter<"VehicleDetails"> | number
  mileage?: Prisma.StringFilter<"VehicleDetails"> | string
  vin?: Prisma.StringFilter<"VehicleDetails"> | string
  VehicleAssessment?: Prisma.VehicleAssessmentListRelationFilter
}

export type VehicleDetailsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  year?: Prisma.SortOrder
  mileage?: Prisma.SortOrder
  vin?: Prisma.SortOrder
  VehicleAssessment?: Prisma.VehicleAssessmentOrderByRelationAggregateInput
}

export type VehicleDetailsWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.VehicleDetailsWhereInput | Prisma.VehicleDetailsWhereInput[]
  OR?: Prisma.VehicleDetailsWhereInput[]
  NOT?: Prisma.VehicleDetailsWhereInput | Prisma.VehicleDetailsWhereInput[]
  make?: Prisma.StringFilter<"VehicleDetails"> | string
  model?: Prisma.StringFilter<"VehicleDetails"> | string
  year?: Prisma.IntFilter<"VehicleDetails"> | number
  mileage?: Prisma.StringFilter<"VehicleDetails"> | string
  vin?: Prisma.StringFilter<"VehicleDetails"> | string
  VehicleAssessment?: Prisma.VehicleAssessmentListRelationFilter
}, "id">

export type VehicleDetailsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  year?: Prisma.SortOrder
  mileage?: Prisma.SortOrder
  vin?: Prisma.SortOrder
  _count?: Prisma.VehicleDetailsCountOrderByAggregateInput
  _avg?: Prisma.VehicleDetailsAvgOrderByAggregateInput
  _max?: Prisma.VehicleDetailsMaxOrderByAggregateInput
  _min?: Prisma.VehicleDetailsMinOrderByAggregateInput
  _sum?: Prisma.VehicleDetailsSumOrderByAggregateInput
}

export type VehicleDetailsScalarWhereWithAggregatesInput = {
  AND?: Prisma.VehicleDetailsScalarWhereWithAggregatesInput | Prisma.VehicleDetailsScalarWhereWithAggregatesInput[]
  OR?: Prisma.VehicleDetailsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.VehicleDetailsScalarWhereWithAggregatesInput | Prisma.VehicleDetailsScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"VehicleDetails"> | string
  make?: Prisma.StringWithAggregatesFilter<"VehicleDetails"> | string
  model?: Prisma.StringWithAggregatesFilter<"VehicleDetails"> | string
  year?: Prisma.IntWithAggregatesFilter<"VehicleDetails"> | number
  mileage?: Prisma.StringWithAggregatesFilter<"VehicleDetails"> | string
  vin?: Prisma.StringWithAggregatesFilter<"VehicleDetails"> | string
}

export type VehicleDetailsCreateInput = {
  id?: string
  make: string
  model: string
  year: number
  mileage: string
  vin: string
  VehicleAssessment?: Prisma.VehicleAssessmentCreateNestedManyWithoutVehicleDetailsInput
}

export type VehicleDetailsUncheckedCreateInput = {
  id?: string
  make: string
  model: string
  year: number
  mileage: string
  vin: string
  VehicleAssessment?: Prisma.VehicleAssessmentUncheckedCreateNestedManyWithoutVehicleDetailsInput
}

export type VehicleDetailsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  mileage?: Prisma.StringFieldUpdateOperationsInput | string
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  VehicleAssessment?: Prisma.VehicleAssessmentUpdateManyWithoutVehicleDetailsNestedInput
}

export type VehicleDetailsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  mileage?: Prisma.StringFieldUpdateOperationsInput | string
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  VehicleAssessment?: Prisma.VehicleAssessmentUncheckedUpdateManyWithoutVehicleDetailsNestedInput
}

export type VehicleDetailsCreateManyInput = {
  id?: string
  make: string
  model: string
  year: number
  mileage: string
  vin: string
}

export type VehicleDetailsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  mileage?: Prisma.StringFieldUpdateOperationsInput | string
  vin?: Prisma.StringFieldUpdateOperationsInput | string
}

export type VehicleDetailsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  mileage?: Prisma.StringFieldUpdateOperationsInput | string
  vin?: Prisma.StringFieldUpdateOperationsInput | string
}

export type VehicleDetailsScalarRelationFilter = {
  is?: Prisma.VehicleDetailsWhereInput
  isNot?: Prisma.VehicleDetailsWhereInput
}

export type VehicleDetailsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  year?: Prisma.SortOrder
  mileage?: Prisma.SortOrder
  vin?: Prisma.SortOrder
}

export type VehicleDetailsAvgOrderByAggregateInput = {
  year?: Prisma.SortOrder
}

export type VehicleDetailsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  year?: Prisma.SortOrder
  mileage?: Prisma.SortOrder
  vin?: Prisma.SortOrder
}

export type VehicleDetailsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  year?: Prisma.SortOrder
  mileage?: Prisma.SortOrder
  vin?: Prisma.SortOrder
}

export type VehicleDetailsSumOrderByAggregateInput = {
  year?: Prisma.SortOrder
}

export type VehicleDetailsCreateNestedOneWithoutVehicleAssessmentInput = {
  create?: Prisma.XOR<Prisma.VehicleDetailsCreateWithoutVehicleAssessmentInput, Prisma.VehicleDetailsUncheckedCreateWithoutVehicleAssessmentInput>
  connectOrCreate?: Prisma.VehicleDetailsCreateOrConnectWithoutVehicleAssessmentInput
  connect?: Prisma.VehicleDetailsWhereUniqueInput
}

export type VehicleDetailsUpdateOneRequiredWithoutVehicleAssessmentNestedInput = {
  create?: Prisma.XOR<Prisma.VehicleDetailsCreateWithoutVehicleAssessmentInput, Prisma.VehicleDetailsUncheckedCreateWithoutVehicleAssessmentInput>
  connectOrCreate?: Prisma.VehicleDetailsCreateOrConnectWithoutVehicleAssessmentInput
  upsert?: Prisma.VehicleDetailsUpsertWithoutVehicleAssessmentInput
  connect?: Prisma.VehicleDetailsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.VehicleDetailsUpdateToOneWithWhereWithoutVehicleAssessmentInput, Prisma.VehicleDetailsUpdateWithoutVehicleAssessmentInput>, Prisma.VehicleDetailsUncheckedUpdateWithoutVehicleAssessmentInput>
}

export type VehicleDetailsCreateWithoutVehicleAssessmentInput = {
  id?: string
  make: string
  model: string
  year: number
  mileage: string
  vin: string
}

export type VehicleDetailsUncheckedCreateWithoutVehicleAssessmentInput = {
  id?: string
  make: string
  model: string
  year: number
  mileage: string
  vin: string
}

export type VehicleDetailsCreateOrConnectWithoutVehicleAssessmentInput = {
  where: Prisma.VehicleDetailsWhereUniqueInput
  create: Prisma.XOR<Prisma.VehicleDetailsCreateWithoutVehicleAssessmentInput, Prisma.VehicleDetailsUncheckedCreateWithoutVehicleAssessmentInput>
}

export type VehicleDetailsUpsertWithoutVehicleAssessmentInput = {
  update: Prisma.XOR<Prisma.VehicleDetailsUpdateWithoutVehicleAssessmentInput, Prisma.VehicleDetailsUncheckedUpdateWithoutVehicleAssessmentInput>
  create: Prisma.XOR<Prisma.VehicleDetailsCreateWithoutVehicleAssessmentInput, Prisma.VehicleDetailsUncheckedCreateWithoutVehicleAssessmentInput>
  where?: Prisma.VehicleDetailsWhereInput
}

export type VehicleDetailsUpdateToOneWithWhereWithoutVehicleAssessmentInput = {
  where?: Prisma.VehicleDetailsWhereInput
  data: Prisma.XOR<Prisma.VehicleDetailsUpdateWithoutVehicleAssessmentInput, Prisma.VehicleDetailsUncheckedUpdateWithoutVehicleAssessmentInput>
}

export type VehicleDetailsUpdateWithoutVehicleAssessmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  mileage?: Prisma.StringFieldUpdateOperationsInput | string
  vin?: Prisma.StringFieldUpdateOperationsInput | string
}

export type VehicleDetailsUncheckedUpdateWithoutVehicleAssessmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  mileage?: Prisma.StringFieldUpdateOperationsInput | string
  vin?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type VehicleDetailsCountOutputType
 */

export type VehicleDetailsCountOutputType = {
  VehicleAssessment: number
}

export type VehicleDetailsCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  VehicleAssessment?: boolean | VehicleDetailsCountOutputTypeCountVehicleAssessmentArgs
}

/**
 * VehicleDetailsCountOutputType without action
 */
export type VehicleDetailsCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetailsCountOutputType
   */
  select?: Prisma.VehicleDetailsCountOutputTypeSelect<ExtArgs> | null
}

/**
 * VehicleDetailsCountOutputType without action
 */
export type VehicleDetailsCountOutputTypeCountVehicleAssessmentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.VehicleAssessmentWhereInput
}


export type VehicleDetailsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  make?: boolean
  model?: boolean
  year?: boolean
  mileage?: boolean
  vin?: boolean
  VehicleAssessment?: boolean | Prisma.VehicleDetails$VehicleAssessmentArgs<ExtArgs>
  _count?: boolean | Prisma.VehicleDetailsCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["vehicleDetails"]>

export type VehicleDetailsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  make?: boolean
  model?: boolean
  year?: boolean
  mileage?: boolean
  vin?: boolean
}, ExtArgs["result"]["vehicleDetails"]>

export type VehicleDetailsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  make?: boolean
  model?: boolean
  year?: boolean
  mileage?: boolean
  vin?: boolean
}, ExtArgs["result"]["vehicleDetails"]>

export type VehicleDetailsSelectScalar = {
  id?: boolean
  make?: boolean
  model?: boolean
  year?: boolean
  mileage?: boolean
  vin?: boolean
}

export type VehicleDetailsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "make" | "model" | "year" | "mileage" | "vin", ExtArgs["result"]["vehicleDetails"]>
export type VehicleDetailsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  VehicleAssessment?: boolean | Prisma.VehicleDetails$VehicleAssessmentArgs<ExtArgs>
  _count?: boolean | Prisma.VehicleDetailsCountOutputTypeDefaultArgs<ExtArgs>
}
export type VehicleDetailsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type VehicleDetailsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $VehicleDetailsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "VehicleDetails"
  objects: {
    VehicleAssessment: Prisma.$VehicleAssessmentPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    make: string
    model: string
    year: number
    mileage: string
    vin: string
  }, ExtArgs["result"]["vehicleDetails"]>
  composites: {}
}

export type VehicleDetailsGetPayload<S extends boolean | null | undefined | VehicleDetailsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload, S>

export type VehicleDetailsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<VehicleDetailsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: VehicleDetailsCountAggregateInputType | true
  }

export interface VehicleDetailsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VehicleDetails'], meta: { name: 'VehicleDetails' } }
  /**
   * Find zero or one VehicleDetails that matches the filter.
   * @param {VehicleDetailsFindUniqueArgs} args - Arguments to find a VehicleDetails
   * @example
   * // Get one VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends VehicleDetailsFindUniqueArgs>(args: Prisma.SelectSubset<T, VehicleDetailsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__VehicleDetailsClient<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one VehicleDetails that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {VehicleDetailsFindUniqueOrThrowArgs} args - Arguments to find a VehicleDetails
   * @example
   * // Get one VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends VehicleDetailsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, VehicleDetailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__VehicleDetailsClient<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first VehicleDetails that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleDetailsFindFirstArgs} args - Arguments to find a VehicleDetails
   * @example
   * // Get one VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends VehicleDetailsFindFirstArgs>(args?: Prisma.SelectSubset<T, VehicleDetailsFindFirstArgs<ExtArgs>>): Prisma.Prisma__VehicleDetailsClient<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first VehicleDetails that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleDetailsFindFirstOrThrowArgs} args - Arguments to find a VehicleDetails
   * @example
   * // Get one VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends VehicleDetailsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, VehicleDetailsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__VehicleDetailsClient<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more VehicleDetails that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleDetailsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.findMany()
   * 
   * // Get first 10 VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const vehicleDetailsWithIdOnly = await prisma.vehicleDetails.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends VehicleDetailsFindManyArgs>(args?: Prisma.SelectSubset<T, VehicleDetailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a VehicleDetails.
   * @param {VehicleDetailsCreateArgs} args - Arguments to create a VehicleDetails.
   * @example
   * // Create one VehicleDetails
   * const VehicleDetails = await prisma.vehicleDetails.create({
   *   data: {
   *     // ... data to create a VehicleDetails
   *   }
   * })
   * 
   */
  create<T extends VehicleDetailsCreateArgs>(args: Prisma.SelectSubset<T, VehicleDetailsCreateArgs<ExtArgs>>): Prisma.Prisma__VehicleDetailsClient<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many VehicleDetails.
   * @param {VehicleDetailsCreateManyArgs} args - Arguments to create many VehicleDetails.
   * @example
   * // Create many VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends VehicleDetailsCreateManyArgs>(args?: Prisma.SelectSubset<T, VehicleDetailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many VehicleDetails and returns the data saved in the database.
   * @param {VehicleDetailsCreateManyAndReturnArgs} args - Arguments to create many VehicleDetails.
   * @example
   * // Create many VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many VehicleDetails and only return the `id`
   * const vehicleDetailsWithIdOnly = await prisma.vehicleDetails.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends VehicleDetailsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, VehicleDetailsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a VehicleDetails.
   * @param {VehicleDetailsDeleteArgs} args - Arguments to delete one VehicleDetails.
   * @example
   * // Delete one VehicleDetails
   * const VehicleDetails = await prisma.vehicleDetails.delete({
   *   where: {
   *     // ... filter to delete one VehicleDetails
   *   }
   * })
   * 
   */
  delete<T extends VehicleDetailsDeleteArgs>(args: Prisma.SelectSubset<T, VehicleDetailsDeleteArgs<ExtArgs>>): Prisma.Prisma__VehicleDetailsClient<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one VehicleDetails.
   * @param {VehicleDetailsUpdateArgs} args - Arguments to update one VehicleDetails.
   * @example
   * // Update one VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends VehicleDetailsUpdateArgs>(args: Prisma.SelectSubset<T, VehicleDetailsUpdateArgs<ExtArgs>>): Prisma.Prisma__VehicleDetailsClient<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more VehicleDetails.
   * @param {VehicleDetailsDeleteManyArgs} args - Arguments to filter VehicleDetails to delete.
   * @example
   * // Delete a few VehicleDetails
   * const { count } = await prisma.vehicleDetails.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends VehicleDetailsDeleteManyArgs>(args?: Prisma.SelectSubset<T, VehicleDetailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more VehicleDetails.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleDetailsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends VehicleDetailsUpdateManyArgs>(args: Prisma.SelectSubset<T, VehicleDetailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more VehicleDetails and returns the data updated in the database.
   * @param {VehicleDetailsUpdateManyAndReturnArgs} args - Arguments to update many VehicleDetails.
   * @example
   * // Update many VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more VehicleDetails and only return the `id`
   * const vehicleDetailsWithIdOnly = await prisma.vehicleDetails.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends VehicleDetailsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, VehicleDetailsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one VehicleDetails.
   * @param {VehicleDetailsUpsertArgs} args - Arguments to update or create a VehicleDetails.
   * @example
   * // Update or create a VehicleDetails
   * const vehicleDetails = await prisma.vehicleDetails.upsert({
   *   create: {
   *     // ... data to create a VehicleDetails
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the VehicleDetails we want to update
   *   }
   * })
   */
  upsert<T extends VehicleDetailsUpsertArgs>(args: Prisma.SelectSubset<T, VehicleDetailsUpsertArgs<ExtArgs>>): Prisma.Prisma__VehicleDetailsClient<runtime.Types.Result.GetResult<Prisma.$VehicleDetailsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of VehicleDetails.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleDetailsCountArgs} args - Arguments to filter VehicleDetails to count.
   * @example
   * // Count the number of VehicleDetails
   * const count = await prisma.vehicleDetails.count({
   *   where: {
   *     // ... the filter for the VehicleDetails we want to count
   *   }
   * })
  **/
  count<T extends VehicleDetailsCountArgs>(
    args?: Prisma.Subset<T, VehicleDetailsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], VehicleDetailsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a VehicleDetails.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleDetailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends VehicleDetailsAggregateArgs>(args: Prisma.Subset<T, VehicleDetailsAggregateArgs>): Prisma.PrismaPromise<GetVehicleDetailsAggregateType<T>>

  /**
   * Group by VehicleDetails.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleDetailsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends VehicleDetailsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: VehicleDetailsGroupByArgs['orderBy'] }
      : { orderBy?: VehicleDetailsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, VehicleDetailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehicleDetailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the VehicleDetails model
 */
readonly fields: VehicleDetailsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for VehicleDetails.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__VehicleDetailsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  VehicleAssessment<T extends Prisma.VehicleDetails$VehicleAssessmentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.VehicleDetails$VehicleAssessmentArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VehicleAssessmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the VehicleDetails model
 */
export interface VehicleDetailsFieldRefs {
  readonly id: Prisma.FieldRef<"VehicleDetails", 'String'>
  readonly make: Prisma.FieldRef<"VehicleDetails", 'String'>
  readonly model: Prisma.FieldRef<"VehicleDetails", 'String'>
  readonly year: Prisma.FieldRef<"VehicleDetails", 'Int'>
  readonly mileage: Prisma.FieldRef<"VehicleDetails", 'String'>
  readonly vin: Prisma.FieldRef<"VehicleDetails", 'String'>
}
    

// Custom InputTypes
/**
 * VehicleDetails findUnique
 */
export type VehicleDetailsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
  /**
   * Filter, which VehicleDetails to fetch.
   */
  where: Prisma.VehicleDetailsWhereUniqueInput
}

/**
 * VehicleDetails findUniqueOrThrow
 */
export type VehicleDetailsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
  /**
   * Filter, which VehicleDetails to fetch.
   */
  where: Prisma.VehicleDetailsWhereUniqueInput
}

/**
 * VehicleDetails findFirst
 */
export type VehicleDetailsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
  /**
   * Filter, which VehicleDetails to fetch.
   */
  where?: Prisma.VehicleDetailsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VehicleDetails to fetch.
   */
  orderBy?: Prisma.VehicleDetailsOrderByWithRelationInput | Prisma.VehicleDetailsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for VehicleDetails.
   */
  cursor?: Prisma.VehicleDetailsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VehicleDetails from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VehicleDetails.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of VehicleDetails.
   */
  distinct?: Prisma.VehicleDetailsScalarFieldEnum | Prisma.VehicleDetailsScalarFieldEnum[]
}

/**
 * VehicleDetails findFirstOrThrow
 */
export type VehicleDetailsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
  /**
   * Filter, which VehicleDetails to fetch.
   */
  where?: Prisma.VehicleDetailsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VehicleDetails to fetch.
   */
  orderBy?: Prisma.VehicleDetailsOrderByWithRelationInput | Prisma.VehicleDetailsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for VehicleDetails.
   */
  cursor?: Prisma.VehicleDetailsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VehicleDetails from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VehicleDetails.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of VehicleDetails.
   */
  distinct?: Prisma.VehicleDetailsScalarFieldEnum | Prisma.VehicleDetailsScalarFieldEnum[]
}

/**
 * VehicleDetails findMany
 */
export type VehicleDetailsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
  /**
   * Filter, which VehicleDetails to fetch.
   */
  where?: Prisma.VehicleDetailsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VehicleDetails to fetch.
   */
  orderBy?: Prisma.VehicleDetailsOrderByWithRelationInput | Prisma.VehicleDetailsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing VehicleDetails.
   */
  cursor?: Prisma.VehicleDetailsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VehicleDetails from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VehicleDetails.
   */
  skip?: number
  distinct?: Prisma.VehicleDetailsScalarFieldEnum | Prisma.VehicleDetailsScalarFieldEnum[]
}

/**
 * VehicleDetails create
 */
export type VehicleDetailsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
  /**
   * The data needed to create a VehicleDetails.
   */
  data: Prisma.XOR<Prisma.VehicleDetailsCreateInput, Prisma.VehicleDetailsUncheckedCreateInput>
}

/**
 * VehicleDetails createMany
 */
export type VehicleDetailsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many VehicleDetails.
   */
  data: Prisma.VehicleDetailsCreateManyInput | Prisma.VehicleDetailsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * VehicleDetails createManyAndReturn
 */
export type VehicleDetailsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * The data used to create many VehicleDetails.
   */
  data: Prisma.VehicleDetailsCreateManyInput | Prisma.VehicleDetailsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * VehicleDetails update
 */
export type VehicleDetailsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
  /**
   * The data needed to update a VehicleDetails.
   */
  data: Prisma.XOR<Prisma.VehicleDetailsUpdateInput, Prisma.VehicleDetailsUncheckedUpdateInput>
  /**
   * Choose, which VehicleDetails to update.
   */
  where: Prisma.VehicleDetailsWhereUniqueInput
}

/**
 * VehicleDetails updateMany
 */
export type VehicleDetailsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update VehicleDetails.
   */
  data: Prisma.XOR<Prisma.VehicleDetailsUpdateManyMutationInput, Prisma.VehicleDetailsUncheckedUpdateManyInput>
  /**
   * Filter which VehicleDetails to update
   */
  where?: Prisma.VehicleDetailsWhereInput
  /**
   * Limit how many VehicleDetails to update.
   */
  limit?: number
}

/**
 * VehicleDetails updateManyAndReturn
 */
export type VehicleDetailsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * The data used to update VehicleDetails.
   */
  data: Prisma.XOR<Prisma.VehicleDetailsUpdateManyMutationInput, Prisma.VehicleDetailsUncheckedUpdateManyInput>
  /**
   * Filter which VehicleDetails to update
   */
  where?: Prisma.VehicleDetailsWhereInput
  /**
   * Limit how many VehicleDetails to update.
   */
  limit?: number
}

/**
 * VehicleDetails upsert
 */
export type VehicleDetailsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
  /**
   * The filter to search for the VehicleDetails to update in case it exists.
   */
  where: Prisma.VehicleDetailsWhereUniqueInput
  /**
   * In case the VehicleDetails found by the `where` argument doesn't exist, create a new VehicleDetails with this data.
   */
  create: Prisma.XOR<Prisma.VehicleDetailsCreateInput, Prisma.VehicleDetailsUncheckedCreateInput>
  /**
   * In case the VehicleDetails was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.VehicleDetailsUpdateInput, Prisma.VehicleDetailsUncheckedUpdateInput>
}

/**
 * VehicleDetails delete
 */
export type VehicleDetailsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
  /**
   * Filter which VehicleDetails to delete.
   */
  where: Prisma.VehicleDetailsWhereUniqueInput
}

/**
 * VehicleDetails deleteMany
 */
export type VehicleDetailsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which VehicleDetails to delete
   */
  where?: Prisma.VehicleDetailsWhereInput
  /**
   * Limit how many VehicleDetails to delete.
   */
  limit?: number
}

/**
 * VehicleDetails.VehicleAssessment
 */
export type VehicleDetails$VehicleAssessmentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleAssessment
   */
  select?: Prisma.VehicleAssessmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleAssessment
   */
  omit?: Prisma.VehicleAssessmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleAssessmentInclude<ExtArgs> | null
  where?: Prisma.VehicleAssessmentWhereInput
  orderBy?: Prisma.VehicleAssessmentOrderByWithRelationInput | Prisma.VehicleAssessmentOrderByWithRelationInput[]
  cursor?: Prisma.VehicleAssessmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.VehicleAssessmentScalarFieldEnum | Prisma.VehicleAssessmentScalarFieldEnum[]
}

/**
 * VehicleDetails without action
 */
export type VehicleDetailsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VehicleDetails
   */
  select?: Prisma.VehicleDetailsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VehicleDetails
   */
  omit?: Prisma.VehicleDetailsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDetailsInclude<ExtArgs> | null
}
